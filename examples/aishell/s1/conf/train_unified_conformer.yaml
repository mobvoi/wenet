# network architecture
# encoder related
encoder: conformer
encoder_conf:
    output_size: 256    # dimension of attention
    attention_heads: 4
    linear_units: 2048  # the number of units of position-wise feed forward
    num_blocks: 12      # the number of encoder blocks
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.0
    input_layer: conv2d # encoder input type, you can chose conv2d, conv2d6 and conv2d8
    normalize_before: true
    cnn_module_kernel: 15
    use_cnn_module: True
    activation_type: 'swish'
    pos_enc_layer_type: 'rel_pos'
    selfattention_layer_type: 'rel_selfattn'
    causal: true
    use_dynamic_chunk: true

# decoder related
decoder: transformer
decoder_conf:
    attention_heads: 4
    linear_units: 2048
    num_blocks: 6
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    self_attention_dropout_rate: 0.0
    src_attention_dropout_rate: 0.0

# hybrid CTC/attention
model_conf:
    ctc_weight: 0.3
    lsm_weight: 0.1     # label smoothing option
    length_normalized_loss: false


collate_conf:
    spec_aug: true
    norm_mean: true # if true, must specify cmvn file in cmd line
    norm_var: true # if true, must specify cmvn file in cmd line

# specaugmentation related
spec_aug_conf:
    num_time_mask: 2
    num_freq_mask: 2
    max_time_mask: 50
    max_freq_mask: 10
    max_time_warp: 80
    warp_for_time: False

# dataset related
dataset_conf:
    max_length: 10240
    min_length: 0
    batch_type: 'static' # static or dynamic
    batch_size: 20
    sort: true

grad_clip: 5
accum_grad: 1
max_epoch: 80
log_interval: 100

optim: adam
optim_conf:
    lr: 0.001
scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 25000
